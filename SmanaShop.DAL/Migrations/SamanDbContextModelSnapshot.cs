// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmanaShop.DAL;

#nullable disable

namespace SmanaShop.DAL.Migrations
{
    [DbContext(typeof(SamanDbContext))]
    partial class SamanDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SamanShop.Bussiness.Models.Customer", b =>
                {
                    b.Property<long>("NationalCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("InvoiceNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long?>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.HasKey("NationalCode");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("SamanShop.Bussiness.Models.Invoice", b =>
                {
                    b.Property<long>("InvoiceNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("WholePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceNumber");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("SamanShop.Bussiness.Models.InvoiceDetail", b =>
                {
                    b.Property<Guid>("InvoiceDetailID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("InavoiveDetailPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("InvoiceNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductQuntity")
                        .HasColumnType("bigint");

                    b.HasKey("InvoiceDetailID");

                    b.HasIndex("InvoiceNumber");

                    b.ToTable("InvoiceDetil", (string)null);
                });

            modelBuilder.Entity("SmanaShop.DAL.Model.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"), 1L, 1);

                    b.Property<long>("ProducCode")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductID");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("SamanShop.Bussiness.Models.Invoice", b =>
                {
                    b.HasOne("SamanShop.Bussiness.Models.Customer", "Customer")
                        .WithOne("Invoice")
                        .HasForeignKey("SamanShop.Bussiness.Models.Invoice", "InvoiceNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SamanShop.Bussiness.Models.InvoiceDetail", b =>
                {
                    b.HasOne("SamanShop.Bussiness.Models.Invoice", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("SamanShop.Bussiness.Models.Customer", b =>
                {
                    b.Navigation("Invoice")
                        .IsRequired();
                });

            modelBuilder.Entity("SamanShop.Bussiness.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
